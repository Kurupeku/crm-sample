version: "3"

services:
  db:
    image: postgres:13.4-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_HOST_AUTH_METHOD=trust

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "8080:3000"
    env_file: ./.env

  gateway:
    image: ghcr.io/kurupeku/crm-sample/gateway:latest
    ports:
      - 2000:2000
    depends_on:
      - staff_api
      - federation
    env_file: ./.env
    environment:
      - PORT=2000

  federation:
    image: ghcr.io/kurupeku/crm-sample/federation:latest
    ports:
      - "3000:3000"
    links:
      - staff_api:staff_api
      - user_api:user_api
      - inquiry_api:inquiry_api
    depends_on:
      - staff_api
      - user_api
      - inquiry_api
    env_file: ./.env
    environment:
      - PORT=3000
    command: npm run dev

  staff_api:
    image: ghcr.io/kurupeku/crm-sample/staff-api:latest
    ports:
      - 3001:3001
    depends_on:
      - db
    env_file: ./.env
    environment:
      - PORT=3001

  grpc_staff_api:
    image: ghcr.io/kurupeku/crm-sample/grpc_staff-api:latest
    ports:
      - 50051:50051
    depends_on:
      - db
    env_file: ./.env
    environment:
      - PORT=50051

  user_api:
    image: ghcr.io/kurupeku/crm-sample/user-api:latest
    ports:
      - "3002:3002"
    depends_on:
      - db
    env_file: ./.env
    environment:
      - PORT=3002

  inquiry_api:
    image: ghcr.io/kurupeku/crm-sample/inquiry-api:latest
    ports:
      - "3003:3003"
    depends_on:
      - db
    env_file: ./.env
    environment:
      - PORT=3003

volumes:
  postgres-data:
