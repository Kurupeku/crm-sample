version: "3"

services:
  db:
    image: postgres:13.4-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_HOST_AUTH_METHOD=trust

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: dev
    ports:
      - "8080:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./client:/app
      - /app/node_modules

  user_api:
    build:
      context: ./inquiry_api
      dockerfile: Dockerfile
    volumes:
      - ./user_api:/usr/src/app
      - user-bundle:/usr/local/bundle
    ports:
      - "3002:3000"
    depends_on:
      - db

  user_db_gui:
    image: sosedoff/pgweb
    ports:
      - "3012:8081"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/user_development?sslmode=disable
    depends_on:
      - db
    restart: always

  inquiry_api:
    build:
      context: ./inquiry_api
      dockerfile: Dockerfile
    volumes:
      - ./inquiry_api:/usr/src/app
      - inquiry-bundle:/usr/local/bundle
    ports:
      - "3003:3000"
    depends_on:
      - db

  inquiry_db_gui:
    image: sosedoff/pgweb
    ports:
      - "3013:8081"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/inquiry_development?sslmode=disable
    depends_on:
      - db
    restart: always

  staff_api:
    build:
      context: ./staff_api
      dockerfile: Dockerfile
      target: dev
    tty: true
    stdin_open: true
    volumes:
      - ./staff_api:/go/src/app
    ports:
      - 3001:3000
    depends_on:
      - db

  staff_db_gui:
    image: sosedoff/pgweb
    ports:
      - "3011:8081"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/staff_development?sslmode=disable
    depends_on:
      - db
    restart: always

  auth_api:
    build:
      context: ./auth_api
      dockerfile: Dockerfile
      target: dev
    tty: true
    stdin_open: true
    volumes:
      - ./auth_api:/go/src/app
    ports:
      - 3004:3000

volumes:
  postgres-data:
  user-bundle:
  inquiry-bundle:
